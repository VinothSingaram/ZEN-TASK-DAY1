//HTTP1.1
The HTTP1.1 supports connection reuse i.e. for every TCP connection there could be multiple 
requests and responses and pipelining where the client can request several resources from
the server at once.
//HTTP2
The HTTP2 uses multiplexing, where over a single TCP connection resources to be delivered are 
interleaved and arrive at the client almost at the same time. It is done using streams which can be 
prioritized and can have dependencies and individual flow control. It also provides a feature called 
"server push" that allows the server to send data that the client will need but has not yet requested.
//HTTP1.1
The HTTP/1.1 provides faster delivery of web pages and reduces web traffic as compared to HTTP/1.0. But 
the TCP starts slowly and with domain sharding (resources can be downloaded simultaneously by 
using multiple domains,connection reuse and pipelining. Hence there is an increased risk of network 
congestion.
//HTTP2
The HTTP/2 utilizes multiplexing and server push to effectively reduce the page load time by a
greater margin along with being less sensitive to network delays.
//HTTP1.1
The HTTP1.1 expands the caching support by using additional headers like cache-control,
conditional headers like If-Match and by using entity tags.
//HTTP2
The HTTP2 does not change much in terms of caching. With the server push feature if the client
finds the resources are already present in the cache, it can cancel the pushed stream.